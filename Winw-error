Last login: Sat Nov 28 01:09:55 on ttys000
h132-120:~ OZ$ cd ~/desktop/code
h132-120:code OZ$ cd ~/desktop/code
h132-120:code OZ$ python3 task9.py

       (                         (
       )\                      ) )\(             (
    ((((_)(  `  )  (    (  ( /(((_)\ ) `  )  (   ))\
     )\ _ )\ /(/(  )\   )\ )(_) )_(()/( /(/(  )\ /((_)
     (_)_\(_|(_)_\((_) ((_| (_)_| |(_)|(_)_\((__|__))
      / _ \ | '_ \) _ \/ _|/ _` | | || | '_ \|_-< -_)
     /_/ \_\| .__/\___/\__|\__,_|_|\_, | .__//__|___|
            |_|                    |__/|_|
        
Drawing button with text New Game
Drawing button with text Load Game
Drawing button with text Load Game
Drawing button with text Save Game
Drawing button with text Main Menu
GENERATING MINIMAX AI MOVE
[[[3, 3, 4, 1]], inf]
AI MOVES: [[3, 3, 4, 1]]
==============

AI Results:
Move: [3, 3, 4, 1]
[[[3, 3, 4, 1]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
4 1 3 1
Checking whitespace
True
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 1 and Row: 3
Moving The Piece At: Column: 3 and Row: 3 
			 To: Column: 1 and Row: 4
Row 4 Column 2
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['P', 'P', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['W', 'K', 'W', 'k', 'k']
GENERATING MINIMAX AI MOVE
[[[1, 0, 2, 0]], inf]
AI MOVES: [[1, 0, 2, 0]]
==============

AI Results:
Move: [1, 0, 2, 0]
[[[1, 0, 2, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 1 2 1
Checking whitespace
True
Moving The Piece At: Column: 1 and Row: 3 
			 To: Column: 1 and Row: 2
Moving The Piece At: Column: 0 and Row: 1 
			 To: Column: 0 and Row: 2
Row 3 Column 2
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['P', 'p', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'K', 'W', 'k', 'k']
GENERATING MINIMAX AI MOVE
[[[2, 0, 3, 0]], inf]
AI MOVES: [[2, 0, 3, 0]]
==============

AI Results:
Move: [2, 0, 3, 0]
[[[2, 0, 3, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 4 
			 To: Column: 1 and Row: 3
Moving The Piece At: Column: 0 and Row: 2 
			 To: Column: 0 and Row: 3
Row 4 Column 2
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['P', 'k', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[3, 0, 4, 0]], inf]
AI MOVES: [[3, 0, 4, 0]]
==============

AI Results:
Move: [3, 0, 4, 0]
[[[3, 0, 4, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Upgraded AI pawn to knight
Moving The Piece At: Column: 1 and Row: 3 
			 To: Column: 3 and Row: 2
Moving The Piece At: Column: 0 and Row: 3 
			 To: Column: 0 and Row: 4
Row 3 Column 4
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['W', 'p', 'W', 'k', 'W']
['W', 'W', 'W', 'W', 'W']
['K', 'K', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[4, 0, 2, 1]], inf]
AI MOVES: [[4, 0, 2, 1]]
==============

AI Results:
Move: [4, 0, 2, 1]
[[[4, 0, 2, 1]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 2 
			 To: Column: 1 and Row: 1
Moving The Piece At: Column: 0 and Row: 4 
			 To: Column: 1 and Row: 2
Row 2 Column 2
Pawn Type: k
Checking whether it is game over or not
Drawing button with text Main Menu
[[-112.42857142857143, -12.950000000000003, 224.85714285714286, 52.8, 'Main Menu', 'draw_main_screen()']]
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'k', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'k']
Drawing button with text New Game
Drawing button with text Load Game
Drawing button with text Load Game
Drawing button with text Save Game
Drawing button with text Main Menu
GENERATING MINIMAX AI MOVE
[[[3, 3, 4, 1]], inf]
AI MOVES: [[3, 3, 4, 1]]
==============

AI Results:
Move: [3, 3, 4, 1]
[[[3, 3, 4, 1]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
4 1 3 1
Checking whitespace
True
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 1 and Row: 3
Moving The Piece At: Column: 3 and Row: 3 
			 To: Column: 1 and Row: 4
Row 4 Column 2
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['P', 'P', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['W', 'K', 'W', 'k', 'k']
GENERATING MINIMAX AI MOVE
[[[1, 0, 2, 0]], inf]
AI MOVES: [[1, 0, 2, 0]]
==============

AI Results:
Move: [1, 0, 2, 0]
[[[1, 0, 2, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 4 
			 To: Column: 2 and Row: 2
Moving The Piece At: Column: 0 and Row: 1 
			 To: Column: 0 and Row: 2
Row 3 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['P', 'W', 'k', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[2, 0, 3, 1]], inf]
AI MOVES: [[2, 0, 3, 1]]
==============

AI Results:
Move: [2, 0, 3, 1]
[[[2, 0, 3, 1]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 1 2 1
Checking whitespace
True
Moving The Piece At: Column: 1 and Row: 3 
			 To: Column: 1 and Row: 2
Moving The Piece At: Column: 0 and Row: 2 
			 To: Column: 1 and Row: 3
Row 3 Column 2
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['W', 'p', 'k', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[4, 1, 3, 3]], inf]
AI MOVES: [[4, 1, 3, 3]]
==============

AI Results:
Move: [4, 1, 3, 3]
[[[4, 1, 3, 3]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 4 and Row: 4 
			 To: Column: 3 and Row: 2
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 3 and Row: 3
Row 3 Column 4
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['W', 'p', 'k', 'k', 'W']
['W', 'P', 'W', 'K', 'W']
['W', 'W', 'W', 'W', 'W']
deselected same box
Drawing button with text Load Game
Drawing button with text Save Game
Drawing button with text Main Menu
GENERATING MINIMAX AI MOVE
[[[3, 3, 4, 1]], inf]
AI MOVES: [[3, 3, 4, 1]]
==============

AI Results:
Move: [3, 3, 4, 1]
[[[3, 3, 4, 1]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
4 1 3 1
Checking whitespace
True
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 1 and Row: 3
Moving The Piece At: Column: 3 and Row: 3 
			 To: Column: 1 and Row: 4
Row 4 Column 2
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['P', 'P', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['W', 'K', 'W', 'k', 'k']
GENERATING MINIMAX AI MOVE
[[[1, 0, 2, 0]], inf]
AI MOVES: [[1, 0, 2, 0]]
==============

AI Results:
Move: [1, 0, 2, 0]
[[[1, 0, 2, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 4 
			 To: Column: 2 and Row: 2
Moving The Piece At: Column: 0 and Row: 1 
			 To: Column: 0 and Row: 2
Row 3 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['P', 'W', 'k', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[2, 0, 3, 1]], inf]
AI MOVES: [[2, 0, 3, 1]]
==============

AI Results:
Move: [2, 0, 3, 1]
[[[2, 0, 3, 1]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 1 2 0
Checking diagonal
New Piece is P
Board State: [['W', 'W', 'W', 'W', 'W'], ['W', 'P', 'W', 'W', 'W'], ['P', 'W', 'k', 'W', 'W'], ['W', 'p', 'W', 'W', 'W'], ['W', 'K', 'W', 'W', 'k']]
True
Moving The Piece At: Column: 1 and Row: 3 
			 To: Column: 0 and Row: 2
Moving The Piece At: Column: 0 and Row: 2 
			 To: Column: 1 and Row: 3
Row 3 Column 1
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['p', 'W', 'k', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[4, 1, 2, 0]], inf]
AI MOVES: [[4, 1, 2, 0]]
==============

AI Results:
Move: [4, 1, 2, 0]
[[[4, 1, 2, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
2 0 1 1
Checking diagonal
New Piece is P
Board State: [['W', 'W', 'W', 'W', 'W'], ['W', 'P', 'W', 'W', 'W'], ['p', 'W', 'k', 'W', 'W'], ['W', 'P', 'W', 'W', 'W'], ['W', 'K', 'W', 'W', 'k']]
True
Moving The Piece At: Column: 0 and Row: 2 
			 To: Column: 1 and Row: 1
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 0 and Row: 2
Row 2 Column 2
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['K', 'W', 'k', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[]], -inf]
Doing random move to the board
AI MOVES: [[2, 0, 3, 2], 0]
==============

AI Results:
Move: [[2, 0, 3, 2], 0]
[[[2, 0, 3, 2], 0], -inf]
Exception in Tkinter callback
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/tkinter/__init__.py", line 1549, in __call__
    return self.func(*args)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/turtle.py", line 675, in eventfun
    fun(x, y)
  File "task9.py", line 1012, in onclick_board_handler
    ai_type_val = get_piece(ai_val[0], ai_val[1])
  File "task9.py", line 682, in get_piece
    return string_array[row][column]
TypeError: list indices must be integers or slices, not list
h132-120:code OZ$ python3 task9.py

       (                         (
       )\                      ) )\(             (
    ((((_)(  `  )  (    (  ( /(((_)\ ) `  )  (   ))\
     )\ _ )\ /(/(  )\   )\ )(_) )_(()/( /(/(  )\ /((_)
     (_)_\(_|(_)_\((_) ((_| (_)_| |(_)|(_)_\((__|__))
      / _ \ | '_ \) _ \/ _|/ _` | | || | '_ \|_-< -_)
     /_/ \_\| .__/\___/\__|\__,_|_|\_, | .__//__|___|
            |_|                    |__/|_|
        
Drawing button with text New Game
Drawing button with text Load Game
Drawing button with text Easy
Drawing button with text Medium
Drawing button with text Hard
Drawing button with text Load Game
Drawing button with text Save Game
Drawing button with text Main Menu
GENERATING MINIMAX AI MOVE
[[[0, 2, 1, 2]], 0]
AI MOVES: [[0, 2, 1, 2]]
==============

AI Results:
Move: [0, 2, 1, 2]
[[[0, 2, 1, 2]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 0 and Row: 4 
			 To: Column: 1 and Row: 2
Moving The Piece At: Column: 2 and Row: 0 
			 To: Column: 2 and Row: 1
Row 3 Column 2
Pawn Type: k
Checking whether it is game over or not
Board:
['K', 'P', 'W', 'P', 'K']
['P', 'W', 'P', 'W', 'P']
['W', 'k', 'W', 'W', 'W']
['p', 'W', 'W', 'W', 'p']
['W', 'p', 'p', 'p', 'k']
GENERATING MINIMAX AI MOVE
[[[0, 0, 2, 1]], -1]
AI MOVES: [[0, 0, 2, 1]]
==============

AI Results:
Move: [0, 0, 2, 1]
[[[0, 0, 2, 1]], -1]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 1 and Row: 2 
			 To: Column: 3 and Row: 1
Moving The Piece At: Column: 0 and Row: 0 
			 To: Column: 1 and Row: 2
Row 2 Column 4
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'P', 'W', 'P', 'K']
['P', 'W', 'P', 'k', 'P']
['W', 'K', 'W', 'W', 'W']
['p', 'W', 'W', 'W', 'p']
['W', 'p', 'p', 'p', 'k']
GENERATING MINIMAX AI MOVE
[[[2, 1, 4, 2]], 0]
AI MOVES: [[2, 1, 4, 2]]
==============

AI Results:
Move: [2, 1, 4, 2]
[[[2, 1, 4, 2]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 1 
			 To: Column: 1 and Row: 0
Moving The Piece At: Column: 1 and Row: 2 
			 To: Column: 2 and Row: 4
Row 1 Column 2
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'k', 'W', 'P', 'K']
['P', 'W', 'P', 'W', 'P']
['W', 'W', 'W', 'W', 'W']
['p', 'W', 'W', 'W', 'p']
['W', 'p', 'K', 'p', 'k']
deselected same box
GENERATING MINIMAX AI MOVE
[[[4, 2, 3, 4]], 0]
AI MOVES: [[4, 2, 3, 4]]
==============

AI Results:
Move: [4, 2, 3, 4]
[[[4, 2, 3, 4]], 0]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 4 2 4
Checking whitespace
True
Moving The Piece At: Column: 4 and Row: 3 
			 To: Column: 4 and Row: 2
Moving The Piece At: Column: 2 and Row: 4 
			 To: Column: 4 and Row: 3
Row 3 Column 5
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'k', 'W', 'P', 'K']
['P', 'W', 'P', 'W', 'P']
['W', 'W', 'W', 'W', 'p']
['p', 'W', 'W', 'W', 'K']
['W', 'p', 'W', 'p', 'k']
GENERATING MINIMAX AI MOVE
[[[0, 4, 2, 3]], -1]
AI MOVES: [[0, 4, 2, 3]]
==============

AI Results:
Move: [0, 4, 2, 3]
[[[0, 4, 2, 3]], -1]
DONE GENERATING MINIMAX AI MOVE
True
Both pieces going to the same location
Both are knights, detroying both
Row 3 Column 4
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'k', 'W', 'P', 'W']
['P', 'W', 'P', 'W', 'P']
['W', 'W', 'W', 'W', 'p']
['p', 'W', 'W', 'W', 'K']
['W', 'p', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[3, 4, 4, 2]], 0]
AI MOVES: [[3, 4, 4, 2]]
==============

AI Results:
Move: [3, 4, 4, 2]
[[[3, 4, 4, 2]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 1 and Row: 0 
			 To: Column: 2 and Row: 2
Moving The Piece At: Column: 4 and Row: 3 
			 To: Column: 2 and Row: 4
Row 3 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'P', 'W']
['P', 'W', 'P', 'W', 'P']
['W', 'W', 'k', 'W', 'p']
['p', 'W', 'W', 'W', 'W']
['W', 'p', 'K', 'p', 'W']
deselected same box
GENERATING MINIMAX AI MOVE
[[[4, 2, 3, 0]], -2]
AI MOVES: [[4, 2, 3, 0]]
==============

AI Results:
Move: [4, 2, 3, 0]
[[[4, 2, 3, 0]], -2]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 0 2 0
Checking whitespace
True
Moving The Piece At: Column: 0 and Row: 3 
			 To: Column: 0 and Row: 2
Moving The Piece At: Column: 2 and Row: 4 
			 To: Column: 0 and Row: 3
Row 3 Column 1
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'P', 'W']
['P', 'W', 'P', 'W', 'P']
['p', 'W', 'k', 'W', 'p']
['K', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[3, 0, 2, 2]], -2]
AI MOVES: [[3, 0, 2, 2]]
==============

AI Results:
Move: [3, 0, 2, 2]
[[[3, 0, 2, 2]], -2]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 0 and Row: 1
Moving The Piece At: Column: 0 and Row: 3 
			 To: Column: 2 and Row: 2
Row 2 Column 1
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'P', 'W']
['k', 'W', 'P', 'W', 'P']
['p', 'W', 'K', 'W', 'p']
['W', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[2, 2, 4, 1]], 0]
AI MOVES: [[2, 2, 4, 1]]
==============

AI Results:
Move: [2, 2, 4, 1]
[[[2, 2, 4, 1]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 0 and Row: 1 
			 To: Column: 2 and Row: 2
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 1 and Row: 4
Row 3 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'P', 'W']
['W', 'W', 'P', 'W', 'P']
['p', 'W', 'k', 'W', 'p']
['W', 'W', 'W', 'W', 'W']
['W', 'K', 'W', 'p', 'W']
deselected same box
GENERATING MINIMAX AI MOVE
[[[4, 1, 2, 0]], 0]
AI MOVES: [[4, 1, 2, 0]]
==============

AI Results:
Move: [4, 1, 2, 0]
[[[4, 1, 2, 0]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 3 and Row: 0
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 0 and Row: 2
Row 1 Column 4
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'k', 'W']
['W', 'W', 'P', 'W', 'P']
['K', 'W', 'W', 'W', 'p']
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[1, 2, 2, 2]], 0]
AI MOVES: [[1, 2, 2, 2]]
==============

AI Results:
Move: [1, 2, 2, 2]
[[[1, 2, 2, 2]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 0 
			 To: Column: 1 and Row: 1
Moving The Piece At: Column: 2 and Row: 1 
			 To: Column: 2 and Row: 2
Row 2 Column 2
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'k', 'W', 'W', 'P']
['K', 'W', 'P', 'W', 'p']
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[2, 0, 1, 2]], 0]
AI MOVES: [[2, 0, 1, 2]]
==============

AI Results:
Move: [2, 0, 1, 2]
[[[2, 0, 1, 2]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 1 and Row: 1 
			 To: Column: 2 and Row: 3
Moving The Piece At: Column: 0 and Row: 2 
			 To: Column: 2 and Row: 1
Row 4 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'K', 'W', 'P']
['W', 'W', 'P', 'W', 'p']
['W', 'W', 'k', 'W', 'W']
['W', 'W', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[1, 2, 2, 4]], inf]
AI MOVES: [[1, 2, 2, 4]]
==============

AI Results:
Move: [1, 2, 2, 4]
[[[1, 2, 2, 4]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
4 3 3 3
Checking whitespace
True
Moving The Piece At: Column: 3 and Row: 4 
			 To: Column: 3 and Row: 3
Moving The Piece At: Column: 2 and Row: 1 
			 To: Column: 4 and Row: 2
Row 4 Column 4
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'P']
['W', 'W', 'P', 'W', 'K']
['W', 'W', 'k', 'p', 'W']
['W', 'W', 'W', 'W', 'W']
GENERATING MINIMAX AI MOVE
[[[2, 2, 3, 3]], inf]
AI MOVES: [[2, 2, 3, 3]]
==============

AI Results:
Move: [2, 2, 3, 3]
[[[2, 2, 3, 3]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 3 2 2
Checking diagonal
New Piece is P
Board State: [['W', 'W', 'W', 'W', 'W'], ['W', 'W', 'W', 'W', 'P'], ['W', 'W', 'P', 'W', 'K'], ['W', 'W', 'k', 'p', 'W'], ['W', 'W', 'W', 'W', 'W']]
True
Moving The Piece At: Column: 3 and Row: 3 
			 To: Column: 2 and Row: 2
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 3 and Row: 3
Row 3 Column 3
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'P']
['W', 'W', 'p', 'W', 'K']
['W', 'W', 'k', 'P', 'W']
['W', 'W', 'W', 'W', 'W']
GENERATING MINIMAX AI MOVE
[[[2, 4, 3, 2]], inf]
AI MOVES: [[2, 4, 3, 2]]
==============

AI Results:
Move: [2, 4, 3, 2]
[[[2, 4, 3, 2]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
2 2 1 2
Checking whitespace
True
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 2 and Row: 1
Moving The Piece At: Column: 4 and Row: 2 
			 To: Column: 2 and Row: 3
Row 2 Column 3
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'p', 'W', 'P']
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'K', 'P', 'W']
['W', 'W', 'W', 'W', 'W']
GENERATING MINIMAX AI MOVE
[[[1, 4, 2, 4]], inf]
AI MOVES: [[1, 4, 2, 4]]
==============

AI Results:
Move: [1, 4, 2, 4]
[[[1, 4, 2, 4]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
1 2 0 2
Checking whitespace
True
Moving The Piece At: Column: 2 and Row: 1 
			 To: Column: 2 and Row: 0
Moving The Piece At: Column: 4 and Row: 1 
			 To: Column: 4 and Row: 2
Row 1 Column 3
Pawn Type: p
Player pawn got to the last rank, checking how many knights they have
Changing piece to a knight
Moving The Piece At: Column: 2 and Row: 1 
			 To: Column: 2 and Row: 0
Checking whether it is game over or not
Drawing button with text Main Menu
[[-112.42857142857143, -12.950000000000003, 224.85714285714286, 52.8, 'Main Menu', 'draw_main_screen()']]
Board:
['W', 'W', 'k', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'P']
['W', 'W', 'K', 'P', 'W']
['W', 'W', 'W', 'W', 'W']
Drawing button with text New Game
Drawing button with text Load Game
Drawing button with text Easy
Drawing button with text Medium
Drawing button with text Hard
Drawing button with text Load Game
Drawing button with text Save Game
Drawing button with text Main Menu
GENERATING MINIMAX AI MOVE
[[[0, 2, 1, 2]], 0]
AI MOVES: [[0, 2, 1, 2]]
==============

AI Results:
Move: [0, 2, 1, 2]
[[[0, 2, 1, 2]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 4 and Row: 4 
			 To: Column: 2 and Row: 3
Moving The Piece At: Column: 2 and Row: 0 
			 To: Column: 2 and Row: 1
Row 4 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['K', 'P', 'W', 'P', 'K']
['P', 'W', 'P', 'W', 'P']
['W', 'W', 'W', 'W', 'W']
['p', 'W', 'k', 'W', 'p']
['k', 'p', 'p', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[0, 4, 2, 3]], 0]
AI MOVES: [[0, 4, 2, 3]]
==============

AI Results:
Move: [0, 4, 2, 3]
[[[0, 4, 2, 3]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 2 and Row: 3 
			 To: Column: 3 and Row: 1
Moving The Piece At: Column: 4 and Row: 0 
			 To: Column: 3 and Row: 2
Row 2 Column 4
Pawn Type: k
Checking whether it is game over or not
Board:
['K', 'P', 'W', 'P', 'W']
['P', 'W', 'P', 'k', 'P']
['W', 'W', 'W', 'K', 'W']
['p', 'W', 'W', 'W', 'p']
['k', 'p', 'p', 'p', 'W']
deselected same box
GENERATING MINIMAX AI MOVE
[[[2, 3, 4, 2]], 0]
AI MOVES: [[2, 3, 4, 2]]
==============

AI Results:
Move: [2, 3, 4, 2]
[[[2, 3, 4, 2]], 0]
DONE GENERATING MINIMAX AI MOVE
Owns piece
4 2 3 2
Checking whitespace
True
Moving The Piece At: Column: 2 and Row: 4 
			 To: Column: 2 and Row: 3
Moving The Piece At: Column: 3 and Row: 2 
			 To: Column: 2 and Row: 4
Row 4 Column 3
Pawn Type: p
Checking whether it is game over or not
Board:
['K', 'P', 'W', 'P', 'W']
['P', 'W', 'P', 'k', 'P']
['W', 'W', 'W', 'W', 'W']
['p', 'W', 'p', 'W', 'p']
['k', 'p', 'K', 'p', 'W']
deselected same box
GENERATING MINIMAX AI MOVE
[[[4, 2, 3, 0]], 0]
AI MOVES: [[4, 2, 3, 0]]
==============

AI Results:
Move: [4, 2, 3, 0]
[[[4, 2, 3, 0]], 0]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 0 2 0
Checking whitespace
True
Moving The Piece At: Column: 0 and Row: 3 
			 To: Column: 0 and Row: 2
Moving The Piece At: Column: 2 and Row: 4 
			 To: Column: 0 and Row: 3
Row 3 Column 1
Pawn Type: p
Checking whether it is game over or not
Board:
['K', 'P', 'W', 'P', 'W']
['P', 'W', 'P', 'k', 'P']
['p', 'W', 'W', 'W', 'W']
['K', 'W', 'p', 'W', 'p']
['k', 'p', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[3, 0, 1, 1]], 0]
AI MOVES: [[3, 0, 1, 1]]
==============

AI Results:
Move: [3, 0, 1, 1]
[[[3, 0, 1, 1]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 1 
			 To: Column: 1 and Row: 0
Moving The Piece At: Column: 0 and Row: 3 
			 To: Column: 1 and Row: 1
Row 1 Column 2
Pawn Type: k
Checking whether it is game over or not
Board:
['K', 'k', 'W', 'P', 'W']
['P', 'K', 'P', 'W', 'P']
['p', 'W', 'W', 'W', 'W']
['W', 'W', 'p', 'W', 'p']
['k', 'p', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[1, 1, 3, 2]], 0]
AI MOVES: [[1, 1, 3, 2]]
==============

AI Results:
Move: [1, 1, 3, 2]
[[[1, 1, 3, 2]], 0]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 2 2 2
Checking whitespace
True
Moving The Piece At: Column: 2 and Row: 3 
			 To: Column: 2 and Row: 2
Moving The Piece At: Column: 1 and Row: 1 
			 To: Column: 2 and Row: 3
Row 3 Column 3
Pawn Type: p
Checking whether it is game over or not
Board:
['K', 'k', 'W', 'P', 'W']
['P', 'W', 'P', 'W', 'P']
['p', 'W', 'p', 'W', 'W']
['W', 'W', 'K', 'W', 'p']
['k', 'p', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[3, 2, 2, 0]], 1]
AI MOVES: [[3, 2, 2, 0]]
==============

AI Results:
Move: [3, 2, 2, 0]
[[[3, 2, 2, 0]], 1]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 0 and Row: 4 
			 To: Column: 2 and Row: 3
Moving The Piece At: Column: 2 and Row: 3 
			 To: Column: 0 and Row: 2
Row 4 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['K', 'k', 'W', 'P', 'W']
['P', 'W', 'P', 'W', 'P']
['K', 'W', 'p', 'W', 'W']
['W', 'W', 'k', 'W', 'p']
['W', 'p', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[2, 0, 4, 1]], 2]
AI MOVES: [[2, 0, 4, 1]]
==============

AI Results:
Move: [2, 0, 4, 1]
[[[2, 0, 4, 1]], 2]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 2 and Row: 3 
			 To: Column: 0 and Row: 2
Moving The Piece At: Column: 0 and Row: 2 
			 To: Column: 1 and Row: 4
Row 3 Column 1
Pawn Type: k
Checking whether it is game over or not
Board:
['K', 'k', 'W', 'P', 'W']
['P', 'W', 'P', 'W', 'P']
['k', 'W', 'p', 'W', 'W']
['W', 'W', 'W', 'W', 'p']
['W', 'K', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[4, 1, 2, 2]], 1]
AI MOVES: [[4, 1, 2, 2]]
==============

AI Results:
Move: [4, 1, 2, 2]
[[[4, 1, 2, 2]], 1]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 0 and Row: 2 
			 To: Column: 2 and Row: 1
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 2 and Row: 2
Row 2 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['K', 'k', 'W', 'P', 'W']
['P', 'W', 'k', 'W', 'P']
['W', 'W', 'K', 'W', 'W']
['W', 'W', 'W', 'W', 'p']
['W', 'W', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[2, 2, 4, 3]], 2]
AI MOVES: [[2, 2, 4, 3]]
==============

AI Results:
Move: [2, 2, 4, 3]
[[[2, 2, 4, 3]], 2]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 2 and Row: 1 
			 To: Column: 0 and Row: 0
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 3 and Row: 4
Row 1 Column 1
Pawn Type: k
Checking whether it is game over or not
Board:
['k', 'k', 'W', 'P', 'W']
['P', 'W', 'W', 'W', 'P']
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'p']
['W', 'W', 'W', 'K', 'W']
deselected same box
GENERATING MINIMAX AI MOVE
[[[0, 3, 1, 3]], inf]
AI MOVES: [[0, 3, 1, 3]]
==============

AI Results:
Move: [0, 3, 1, 3]
[[[0, 3, 1, 3]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 1 and Row: 0 
			 To: Column: 2 and Row: 2
Moving The Piece At: Column: 3 and Row: 0 
			 To: Column: 3 and Row: 1
Row 3 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['k', 'W', 'W', 'W', 'W']
['P', 'W', 'W', 'P', 'P']
['W', 'W', 'k', 'W', 'W']
['W', 'W', 'W', 'W', 'p']
['W', 'W', 'W', 'K', 'W']
GENERATING MINIMAX AI MOVE
[[[4, 3, 2, 2]], inf]
AI MOVES: [[4, 3, 2, 2]]
==============

AI Results:
Move: [4, 3, 2, 2]
[[[4, 3, 2, 2]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 4 and Row: 1
Moving The Piece At: Column: 3 and Row: 4 
			 To: Column: 2 and Row: 2
Row 2 Column 5
Pawn Type: k
Checking whether it is game over or not
Board:
['k', 'W', 'W', 'W', 'W']
['P', 'W', 'W', 'P', 'k']
['W', 'W', 'K', 'W', 'W']
['W', 'W', 'W', 'W', 'p']
['W', 'W', 'W', 'W', 'W']
GENERATING MINIMAX AI MOVE
[[[2, 2, 3, 4]], inf]
AI MOVES: [[2, 2, 3, 4]]
==============

AI Results:
Move: [2, 2, 3, 4]
[[[2, 2, 3, 4]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 4 2 4
Checking whitespace
True
Moving The Piece At: Column: 4 and Row: 3 
			 To: Column: 4 and Row: 2
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 4 and Row: 3
Row 3 Column 5
Pawn Type: p
Checking whether it is game over or not
Board:
['k', 'W', 'W', 'W', 'W']
['P', 'W', 'W', 'P', 'k']
['W', 'W', 'W', 'W', 'p']
['W', 'W', 'W', 'W', 'K']
['W', 'W', 'W', 'W', 'W']
GENERATING MINIMAX AI MOVE
[[[1, 3, 2, 4]], inf]
AI MOVES: [[1, 3, 2, 4]]
==============

AI Results:
Move: [1, 3, 2, 4]
[[[1, 3, 2, 4]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 4 and Row: 1 
			 To: Column: 2 and Row: 2
Moving The Piece At: Column: 3 and Row: 1 
			 To: Column: 4 and Row: 2
Row 3 Column 3
Pawn Type: k
Checking whether it is game over or not
Drawing button with text Main Menu
[[-112.42857142857143, -12.950000000000003, 224.85714285714286, 52.8, 'Main Menu', 'draw_main_screen()']]
Board:
['k', 'W', 'W', 'W', 'W']
['P', 'W', 'W', 'W', 'W']
['W', 'W', 'k', 'W', 'P']
['W', 'W', 'W', 'W', 'K']
['W', 'W', 'W', 'W', 'W']
Drawing button with text New Game
Drawing button with text Load Game
Drawing button with text Easy
Drawing button with text Medium
Drawing button with text Hard
Drawing button with text Load Game
Drawing button with text Save Game
Drawing button with text Main Menu
GENERATING MINIMAX AI MOVE
[[[0, 2, 1, 2]], 0]
AI MOVES: [[0, 2, 1, 2]]
==============

AI Results:
Move: [0, 2, 1, 2]
[[[0, 2, 1, 2]], 0]
DONE GENERATING MINIMAX AI MOVE
Owns piece
4 2 3 2
Checking whitespace
True
Moving The Piece At: Column: 2 and Row: 4 
			 To: Column: 2 and Row: 3
Moving The Piece At: Column: 2 and Row: 0 
			 To: Column: 2 and Row: 1
Row 4 Column 3
Pawn Type: p
Checking whether it is game over or not
Board:
['K', 'P', 'W', 'P', 'K']
['P', 'W', 'P', 'W', 'P']
['W', 'W', 'W', 'W', 'W']
['p', 'W', 'p', 'W', 'p']
['k', 'p', 'W', 'p', 'k']
GENERATING MINIMAX AI MOVE
[[[0, 4, 2, 3]], -1]
AI MOVES: [[0, 4, 2, 3]]
==============

AI Results:
Move: [0, 4, 2, 3]
[[[0, 4, 2, 3]], -1]
DONE GENERATING MINIMAX AI MOVE
True
Both pieces going to the same location
Both are knights, detroying both
Row 3 Column 4
Pawn Type: k
Checking whether it is game over or not
Board:
['K', 'P', 'W', 'P', 'W']
['P', 'W', 'P', 'W', 'P']
['W', 'W', 'W', 'W', 'W']
['p', 'W', 'p', 'W', 'p']
['k', 'p', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[0, 0, 2, 1]], -1]
AI MOVES: [[0, 0, 2, 1]]
==============

AI Results:
Move: [0, 0, 2, 1]
[[[0, 0, 2, 1]], -1]
DONE GENERATING MINIMAX AI MOVE
True
Both pieces going to the same location
Both are knights, detroying both
Row 3 Column 2
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'P', 'W', 'P', 'W']
['P', 'W', 'P', 'W', 'P']
['W', 'W', 'W', 'W', 'W']
['p', 'W', 'p', 'W', 'p']
['W', 'p', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[0, 1, 1, 1]], 0]
AI MOVES: [[0, 1, 1, 1]]
==============

AI Results:
Move: [0, 1, 1, 1]
[[[0, 1, 1, 1]], 0]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 2 2 2
Checking whitespace
True
Moving The Piece At: Column: 2 and Row: 3 
			 To: Column: 2 and Row: 2
Moving The Piece At: Column: 1 and Row: 0 
			 To: Column: 1 and Row: 1
Row 3 Column 3
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'P', 'W']
['P', 'P', 'P', 'W', 'P']
['W', 'W', 'p', 'W', 'W']
['p', 'W', 'W', 'W', 'p']
['W', 'p', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[1, 1, 2, 2]], 1]
AI MOVES: [[1, 1, 2, 2]]
==============

AI Results:
Move: [1, 1, 2, 2]
[[[1, 1, 2, 2]], 1]
DONE GENERATING MINIMAX AI MOVE
Owns piece
2 2 1 1
Checking diagonal
New Piece is P
Board State: [['W', 'W', 'W', 'P', 'W'], ['P', 'P', 'P', 'W', 'P'], ['W', 'W', 'p', 'W', 'W'], ['p', 'W', 'W', 'W', 'p'], ['W', 'p', 'W', 'p', 'W']]
True
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 1 and Row: 1
Moving The Piece At: Column: 1 and Row: 1 
			 To: Column: 2 and Row: 2
Row 2 Column 2
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'P', 'W']
['P', 'p', 'P', 'W', 'P']
['W', 'W', 'P', 'W', 'W']
['p', 'W', 'W', 'W', 'p']
['W', 'p', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[1, 4, 2, 4]], -1]
AI MOVES: [[1, 4, 2, 4]]
==============

AI Results:
Move: [1, 4, 2, 4]
[[[1, 4, 2, 4]], -1]
DONE GENERATING MINIMAX AI MOVE
Owns piece
4 3 3 2
Checking diagonal
New Piece is W
Board State: [['W', 'W', 'W', 'P', 'W'], ['P', 'p', 'P', 'W', 'P'], ['W', 'W', 'P', 'W', 'W'], ['p', 'W', 'W', 'W', 'p'], ['W', 'p', 'W', 'p', 'W']]
False
Player Penalty
Moving The Piece At: Column: 4 and Row: 1 
			 To: Column: 4 and Row: 2
Row 4 Column 3
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'P', 'W']
['P', 'p', 'P', 'W', 'W']
['W', 'W', 'P', 'W', 'P']
['p', 'W', 'W', 'W', 'p']
['W', 'p', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[2, 2, 3, 2]], -1]
AI MOVES: [[2, 2, 3, 2]]
==============

AI Results:
Move: [2, 2, 3, 2]
[[[2, 2, 3, 2]], -1]
DONE GENERATING MINIMAX AI MOVE
Owns piece
1 1 0 1
Checking whitespace
True
Moving The Piece At: Column: 1 and Row: 1 
			 To: Column: 1 and Row: 0
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 2 and Row: 3
Row 1 Column 2
Pawn Type: p
Player pawn got to the last rank, checking how many knights they have
Changing piece to a knight
Moving The Piece At: Column: 1 and Row: 1 
			 To: Column: 1 and Row: 0
Checking whether it is game over or not
Board:
['W', 'k', 'W', 'P', 'W']
['P', 'W', 'P', 'W', 'W']
['W', 'W', 'W', 'W', 'P']
['p', 'W', 'P', 'W', 'p']
['W', 'p', 'W', 'p', 'W']
GENERATING MINIMAX AI MOVE
[[[3, 2, 4, 3]], 0]
AI MOVES: [[3, 2, 4, 3]]
==============

AI Results:
Move: [3, 2, 4, 3]
[[[3, 2, 4, 3]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Upgraded AI pawn to knight
Moving The Piece At: Column: 1 and Row: 0 
			 To: Column: 2 and Row: 2
Moving The Piece At: Column: 2 and Row: 3 
			 To: Column: 3 and Row: 4
Row 3 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'P', 'W']
['P', 'W', 'P', 'W', 'W']
['W', 'W', 'k', 'W', 'P']
['p', 'W', 'W', 'W', 'p']
['W', 'p', 'W', 'K', 'W']
GENERATING MINIMAX AI MOVE
[[[4, 3, 2, 2]], 0]
AI MOVES: [[4, 3, 2, 2]]
==============

AI Results:
Move: [4, 3, 2, 2]
[[[4, 3, 2, 2]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 3 and Row: 4
Moving The Piece At: Column: 3 and Row: 4 
			 To: Column: 2 and Row: 2
Row 5 Column 4
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'P', 'W']
['P', 'W', 'P', 'W', 'W']
['W', 'W', 'K', 'W', 'P']
['p', 'W', 'W', 'W', 'p']
['W', 'p', 'W', 'k', 'W']
GENERATING MINIMAX AI MOVE
[[[2, 2, 3, 4]], 0]
AI MOVES: [[2, 2, 3, 4]]
==============

AI Results:
Move: [2, 2, 3, 4]
[[[2, 2, 3, 4]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 4 
			 To: Column: 4 and Row: 2
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 4 and Row: 3
Row 3 Column 5
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'P', 'W']
['P', 'W', 'P', 'W', 'W']
['W', 'W', 'W', 'W', 'k']
['p', 'W', 'W', 'W', 'K']
['W', 'p', 'W', 'W', 'W']
GENERATING MINIMAX AI MOVE
[[[0, 3, 1, 3]], 0]
AI MOVES: [[0, 3, 1, 3]]
==============

AI Results:
Move: [0, 3, 1, 3]
[[[0, 3, 1, 3]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 4 and Row: 2 
			 To: Column: 2 and Row: 1
Moving The Piece At: Column: 3 and Row: 0 
			 To: Column: 3 and Row: 1
Row 2 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['P', 'W', 'k', 'P', 'W']
['W', 'W', 'W', 'W', 'W']
['p', 'W', 'W', 'W', 'K']
['W', 'p', 'W', 'W', 'W']
GENERATING MINIMAX AI MOVE
[[[3, 4, 2, 2]], 0]
AI MOVES: [[3, 4, 2, 2]]
==============

AI Results:
Move: [3, 4, 2, 2]
[[[3, 4, 2, 2]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 2 and Row: 1 
			 To: Column: 1 and Row: 3
Moving The Piece At: Column: 4 and Row: 3 
			 To: Column: 2 and Row: 2
Row 4 Column 2
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['P', 'W', 'W', 'P', 'W']
['W', 'W', 'K', 'W', 'W']
['p', 'k', 'W', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
GENERATING MINIMAX AI MOVE
[[[2, 2, 4, 1]], 0]
AI MOVES: [[2, 2, 4, 1]]
==============

AI Results:
Move: [2, 2, 4, 1]
[[[2, 2, 4, 1]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 1 and Row: 3 
			 To: Column: 3 and Row: 2
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 1 and Row: 4
Row 3 Column 4
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['P', 'W', 'W', 'P', 'W']
['W', 'W', 'W', 'k', 'W']
['p', 'W', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'W']
GENERATING MINIMAX AI MOVE
[[[1, 0, 2, 0]], inf]
AI MOVES: [[1, 0, 2, 0]]
==============

AI Results:
Move: [1, 0, 2, 0]
[[[1, 0, 2, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 2 
			 To: Column: 2 and Row: 0
Moving The Piece At: Column: 0 and Row: 1 
			 To: Column: 0 and Row: 2
Row 1 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'k', 'W', 'W']
['W', 'W', 'W', 'P', 'W']
['P', 'W', 'W', 'W', 'W']
['p', 'W', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'W']
GENERATING MINIMAX AI MOVE
[[[1, 3, 2, 3]], inf]
AI MOVES: [[1, 3, 2, 3]]
==============

AI Results:
Move: [1, 3, 2, 3]
[[[1, 3, 2, 3]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 2 and Row: 0 
			 To: Column: 0 and Row: 1
Moving The Piece At: Column: 3 and Row: 1 
			 To: Column: 3 and Row: 2
Row 2 Column 1
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['k', 'W', 'W', 'W', 'W']
['P', 'W', 'W', 'P', 'W']
['p', 'W', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'W']
GENERATING MINIMAX AI MOVE
[[[2, 3, 3, 3]], inf]
AI MOVES: [[2, 3, 3, 3]]
==============

AI Results:
Move: [2, 3, 3, 3]
[[[2, 3, 3, 3]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 0 and Row: 1 
			 To: Column: 1 and Row: 3
Moving The Piece At: Column: 3 and Row: 2 
			 To: Column: 3 and Row: 3
Row 4 Column 2
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['P', 'W', 'W', 'W', 'W']
['p', 'k', 'W', 'P', 'W']
['W', 'K', 'W', 'W', 'W']
GENERATING MINIMAX AI MOVE
[[[4, 1, 2, 2]], inf]
AI MOVES: [[4, 1, 2, 2]]
==============

AI Results:
Move: [4, 1, 2, 2]
[[[4, 1, 2, 2]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 1 and Row: 3 
			 To: Column: 3 and Row: 4
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 2 and Row: 2
Row 5 Column 4
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['P', 'W', 'K', 'W', 'W']
['p', 'W', 'W', 'P', 'W']
['W', 'W', 'W', 'k', 'W']
deselected same box
GENERATING MINIMAX AI MOVE
[[[2, 2, 3, 0]], inf]
AI MOVES: [[2, 2, 3, 0]]
==============

AI Results:
Move: [2, 2, 3, 0]
[[[2, 2, 3, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 4 
			 To: Column: 1 and Row: 3
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 0 and Row: 3
Row 4 Column 2
Pawn Type: k
Checking whether it is game over or not
Drawing button with text Main Menu
[[-112.42857142857143, -12.950000000000003, 224.85714285714286, 52.8, 'Main Menu', 'draw_main_screen()']]
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['P', 'W', 'W', 'W', 'W']
['K', 'k', 'W', 'P', 'W']
['W', 'W', 'W', 'W', 'W']
Drawing button with text New Game
Drawing button with text Load Game
Drawing button with text Load Game
Drawing button with text Save Game
Drawing button with text Main Menu
GENERATING MINIMAX AI MOVE
[[[3, 3, 4, 1]], inf]
AI MOVES: [[3, 3, 4, 1]]
==============

AI Results:
Move: [3, 3, 4, 1]
[[[3, 3, 4, 1]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
4 1 3 1
Checking whitespace
True
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 1 and Row: 3
Moving The Piece At: Column: 3 and Row: 3 
			 To: Column: 1 and Row: 4
Row 4 Column 2
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['P', 'P', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['W', 'K', 'W', 'k', 'k']
GENERATING MINIMAX AI MOVE
[[[1, 0, 2, 0]], inf]
AI MOVES: [[1, 0, 2, 0]]
==============

AI Results:
Move: [1, 0, 2, 0]
[[[1, 0, 2, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 4 
			 To: Column: 2 and Row: 2
Moving The Piece At: Column: 0 and Row: 1 
			 To: Column: 0 and Row: 2
Row 3 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['P', 'W', 'k', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[2, 0, 3, 1]], inf]
AI MOVES: [[2, 0, 3, 1]]
==============

AI Results:
Move: [2, 0, 3, 1]
[[[2, 0, 3, 1]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 1 2 0
Checking diagonal
New Piece is P
Board State: [['W', 'W', 'W', 'W', 'W'], ['W', 'P', 'W', 'W', 'W'], ['P', 'W', 'k', 'W', 'W'], ['W', 'p', 'W', 'W', 'W'], ['W', 'K', 'W', 'W', 'k']]
True
Moving The Piece At: Column: 1 and Row: 3 
			 To: Column: 0 and Row: 2
Moving The Piece At: Column: 0 and Row: 2 
			 To: Column: 1 and Row: 3
Row 3 Column 1
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['p', 'W', 'k', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[4, 1, 2, 0]], inf]
AI MOVES: [[4, 1, 2, 0]]
==============

AI Results:
Move: [4, 1, 2, 0]
[[[4, 1, 2, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
2 0 1 1
Checking diagonal
New Piece is P
Board State: [['W', 'W', 'W', 'W', 'W'], ['W', 'P', 'W', 'W', 'W'], ['p', 'W', 'k', 'W', 'W'], ['W', 'P', 'W', 'W', 'W'], ['W', 'K', 'W', 'W', 'k']]
True
Moving The Piece At: Column: 0 and Row: 2 
			 To: Column: 1 and Row: 1
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 0 and Row: 2
Row 2 Column 2
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['K', 'W', 'k', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[]], -inf]
Doing random move to the board
AI MOVES: [[2, 0, 3, 2], 0]
==============

AI Results:
Move: [[2, 0, 3, 2], 0]
[[[2, 0, 3, 2], 0], -inf]
Exception in Tkinter callback
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/tkinter/__init__.py", line 1549, in __call__
    return self.func(*args)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/turtle.py", line 675, in eventfun
    fun(x, y)
  File "task9.py", line 1012, in onclick_board_handler
    ai_type_val = get_piece(ai_val[0], ai_val[1])
  File "task9.py", line 682, in get_piece
    return string_array[row][column]
TypeError: list indices must be integers or slices, not list
h132-120:code OZ$ python3 task9.py

       (                         (
       )\                      ) )\(             (
    ((((_)(  `  )  (    (  ( /(((_)\ ) `  )  (   ))\
     )\ _ )\ /(/(  )\   )\ )(_) )_(()/( /(/(  )\ /((_)
     (_)_\(_|(_)_\((_) ((_| (_)_| |(_)|(_)_\((__|__))
      / _ \ | '_ \) _ \/ _|/ _` | | || | '_ \|_-< -_)
     /_/ \_\| .__/\___/\__|\__,_|_|\_, | .__//__|___|
            |_|                    |__/|_|
        
Drawing button with text New Game
Drawing button with text Load Game
Drawing button with text Load Game
Drawing button with text Save Game
Drawing button with text Main Menu
deselected same box
GENERATING MINIMAX AI MOVE
[[[3, 3, 4, 1]], inf]
AI MOVES: [[3, 3, 4, 1]]
==============

AI Results:
Move: [3, 3, 4, 1]
[[[3, 3, 4, 1]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
4 1 3 1
Checking whitespace
True
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 1 and Row: 3
Moving The Piece At: Column: 3 and Row: 3 
			 To: Column: 1 and Row: 4
Row 4 Column 2
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['P', 'P', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['W', 'K', 'W', 'k', 'k']
deselected same box
GENERATING MINIMAX AI MOVE
[[[1, 0, 2, 0]], inf]
AI MOVES: [[1, 0, 2, 0]]
==============

AI Results:
Move: [1, 0, 2, 0]
[[[1, 0, 2, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 1 2 1
Checking whitespace
True
Moving The Piece At: Column: 1 and Row: 3 
			 To: Column: 1 and Row: 2
Moving The Piece At: Column: 0 and Row: 1 
			 To: Column: 0 and Row: 2
Row 3 Column 2
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['P', 'p', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'K', 'W', 'k', 'k']
deselected same box
GENERATING MINIMAX AI MOVE
[[[2, 0, 3, 0]], inf]
AI MOVES: [[2, 0, 3, 0]]
==============

AI Results:
Move: [2, 0, 3, 0]
[[[2, 0, 3, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 4 and Row: 4 
			 To: Column: 2 and Row: 3
Moving The Piece At: Column: 0 and Row: 2 
			 To: Column: 0 and Row: 3
Row 4 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['P', 'W', 'k', 'W', 'W']
['W', 'K', 'W', 'k', 'W']
GENERATING MINIMAX AI MOVE
[[[4, 1, 3, 3]], inf]
AI MOVES: [[4, 1, 3, 3]]
==============

AI Results:
Move: [4, 1, 3, 3]
[[[4, 1, 3, 3]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 2 and Row: 3 
			 To: Column: 0 and Row: 4
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 3 and Row: 3
Row 5 Column 1
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['P', 'W', 'W', 'K', 'W']
['k', 'W', 'W', 'k', 'W']
GENERATING MINIMAX AI MOVE
[[[3, 3, 2, 1]], inf]
AI MOVES: [[3, 3, 2, 1]]
==============

AI Results:
Move: [3, 3, 2, 1]
[[[3, 3, 2, 1]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 4 
			 To: Column: 4 and Row: 2
Moving The Piece At: Column: 3 and Row: 3 
			 To: Column: 1 and Row: 2
Row 3 Column 5
Pawn Type: k
Checking whether it is game over or not
Drawing button with text Main Menu
[[-112.42857142857143, -12.950000000000003, 224.85714285714286, 52.8, 'Main Menu', 'draw_main_screen()']]
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'P', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'k']
['P', 'W', 'W', 'W', 'W']
['k', 'W', 'W', 'W', 'W']
Drawing button with text New Game
Drawing button with text Load Game
Drawing button with text Easy
Drawing button with text Medium
Drawing button with text Hard
Drawing button with text Load Game
Drawing button with text Save Game
Drawing button with text Main Menu
GENERATING MINIMAX AI MOVE
[[[0, 2, 1, 2]], 0]
AI MOVES: [[0, 2, 1, 2]]
==============

AI Results:
Move: [0, 2, 1, 2]
[[[0, 2, 1, 2]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 0 and Row: 4 
			 To: Column: 1 and Row: 2
Moving The Piece At: Column: 2 and Row: 0 
			 To: Column: 2 and Row: 1
Row 3 Column 2
Pawn Type: k
Checking whether it is game over or not
Board:
['K', 'P', 'W', 'P', 'K']
['P', 'W', 'P', 'W', 'P']
['W', 'k', 'W', 'W', 'W']
['p', 'W', 'W', 'W', 'p']
['W', 'p', 'p', 'p', 'k']
GENERATING MINIMAX AI MOVE
[[[0, 0, 2, 1]], -1]
AI MOVES: [[0, 0, 2, 1]]
==============

AI Results:
Move: [0, 0, 2, 1]
[[[0, 0, 2, 1]], -1]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 1 and Row: 2 
			 To: Column: 0 and Row: 0
Moving The Piece At: Column: 0 and Row: 0 
			 To: Column: 1 and Row: 2
Row 1 Column 1
Pawn Type: k
Checking whether it is game over or not
Board:
['k', 'P', 'W', 'P', 'K']
['P', 'W', 'P', 'W', 'P']
['W', 'K', 'W', 'W', 'W']
['p', 'W', 'W', 'W', 'p']
['W', 'p', 'p', 'p', 'k']
GENERATING MINIMAX AI MOVE
[[[2, 1, 4, 2]], 0]
AI MOVES: [[2, 1, 4, 2]]
==============

AI Results:
Move: [2, 1, 4, 2]
[[[2, 1, 4, 2]], 0]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 0 and Row: 0 
			 To: Column: 2 and Row: 1
Moving The Piece At: Column: 1 and Row: 2 
			 To: Column: 2 and Row: 4
Row 2 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'P', 'W', 'P', 'K']
['P', 'W', 'k', 'W', 'P']
['W', 'W', 'W', 'W', 'W']
['p', 'W', 'W', 'W', 'p']
['W', 'p', 'K', 'p', 'k']
GENERATING MINIMAX AI MOVE
[[[4, 2, 3, 0]], 0]
AI MOVES: [[4, 2, 3, 0]]
==============

AI Results:
Move: [4, 2, 3, 0]
[[[4, 2, 3, 0]], 0]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 4 2 4
Checking whitespace
True
Moving The Piece At: Column: 4 and Row: 3 
			 To: Column: 4 and Row: 2
Moving The Piece At: Column: 2 and Row: 4 
			 To: Column: 0 and Row: 3
Row 3 Column 5
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'P', 'W', 'P', 'K']
['P', 'W', 'k', 'W', 'P']
['W', 'W', 'W', 'W', 'p']
['K', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'p', 'k']
GENERATING MINIMAX AI MOVE
[[[0, 4, 1, 2]], 2]
AI MOVES: [[0, 4, 1, 2]]
==============

AI Results:
Move: [0, 4, 1, 2]
[[[0, 4, 1, 2]], 2]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 2 and Row: 1 
			 To: Column: 4 and Row: 0
Moving The Piece At: Column: 4 and Row: 0 
			 To: Column: 2 and Row: 1
Row 1 Column 5
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'P', 'W', 'P', 'k']
['P', 'W', 'K', 'W', 'P']
['W', 'W', 'W', 'W', 'p']
['K', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'p', 'k']
GENERATING MINIMAX AI MOVE
[[[1, 2, 2, 4]], 3]
AI MOVES: [[1, 2, 2, 4]]
==============

AI Results:
Move: [1, 2, 2, 4]
[[[1, 2, 2, 4]], 3]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 4 and Row: 0 
			 To: Column: 2 and Row: 1
Moving The Piece At: Column: 2 and Row: 1 
			 To: Column: 4 and Row: 2
Row 2 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'P', 'W', 'P', 'W']
['P', 'W', 'k', 'W', 'P']
['W', 'W', 'W', 'W', 'K']
['K', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'p', 'k']
deselected same box
GENERATING MINIMAX AI MOVE
[[[2, 4, 4, 3]], 4]
AI MOVES: [[2, 4, 4, 3]]
==============

AI Results:
Move: [2, 4, 4, 3]
[[[2, 4, 4, 3]], 4]
DONE GENERATING MINIMAX AI MOVE
Owns piece
4 3 3 3
Checking whitespace
True
Moving The Piece At: Column: 3 and Row: 4 
			 To: Column: 3 and Row: 3
Moving The Piece At: Column: 4 and Row: 2 
			 To: Column: 3 and Row: 4
Row 4 Column 4
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'P', 'W', 'P', 'W']
['P', 'W', 'k', 'W', 'P']
['W', 'W', 'W', 'W', 'W']
['K', 'W', 'W', 'p', 'W']
['W', 'p', 'W', 'K', 'k']
GENERATING MINIMAX AI MOVE
[[[3, 0, 2, 2]], 4]
AI MOVES: [[3, 0, 2, 2]]
==============

AI Results:
Move: [3, 0, 2, 2]
[[[3, 0, 2, 2]], 4]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 3 2 3
Checking whitespace
True
Moving The Piece At: Column: 3 and Row: 3 
			 To: Column: 3 and Row: 2
Moving The Piece At: Column: 0 and Row: 3 
			 To: Column: 2 and Row: 2
Row 3 Column 4
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'P', 'W', 'P', 'W']
['P', 'W', 'k', 'W', 'P']
['W', 'W', 'K', 'p', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'K', 'k']
GENERATING MINIMAX AI MOVE
[[[2, 2, 4, 1]], 4]
AI MOVES: [[2, 2, 4, 1]]
==============

AI Results:
Move: [2, 2, 4, 1]
[[[2, 2, 4, 1]], 4]
DONE GENERATING MINIMAX AI MOVE
Owns piece
2 3 1 3
Checking whitespace
True
Moving The Piece At: Column: 3 and Row: 2 
			 To: Column: 3 and Row: 1
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 1 and Row: 4
Row 2 Column 4
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'P', 'W', 'P', 'W']
['P', 'W', 'k', 'p', 'P']
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'K', 'W', 'K', 'k']
GENERATING MINIMAX AI MOVE
[[[0, 1, 1, 2]], inf]
AI MOVES: [[0, 1, 1, 2]]
==============

AI Results:
Move: [0, 1, 1, 2]
[[[0, 1, 1, 2]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 2 and Row: 1 
			 To: Column: 4 and Row: 2
Moving The Piece At: Column: 1 and Row: 0 
			 To: Column: 2 and Row: 1
Row 3 Column 5
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'P', 'W']
['P', 'W', 'P', 'p', 'P']
['W', 'W', 'W', 'W', 'k']
['W', 'W', 'W', 'W', 'W']
['W', 'K', 'W', 'K', 'k']
GENERATING MINIMAX AI MOVE
[[[4, 1, 2, 0]], inf]
AI MOVES: [[4, 1, 2, 0]]
==============

AI Results:
Move: [4, 1, 2, 0]
[[[4, 1, 2, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 4 and Row: 2 
			 To: Column: 3 and Row: 0
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 0 and Row: 2
Row 1 Column 4
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'k', 'W']
['P', 'W', 'P', 'p', 'P']
['K', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'K', 'k']
GENERATING MINIMAX AI MOVE
[[[2, 0, 0, 1]], inf]
AI MOVES: [[2, 0, 0, 1]]
==============

AI Results:
Move: [2, 0, 0, 1]
[[[2, 0, 0, 1]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 0 
			 To: Column: 2 and Row: 2
Moving The Piece At: Column: 0 and Row: 2 
			 To: Column: 1 and Row: 0
Row 3 Column 3
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'K', 'W', 'W', 'W']
['P', 'W', 'P', 'p', 'P']
['W', 'W', 'k', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'K', 'k']
GENERATING MINIMAX AI MOVE
[[[0, 1, 1, 3]], inf]
AI MOVES: [[0, 1, 1, 3]]
==============

AI Results:
Move: [0, 1, 1, 3]
[[[0, 1, 1, 3]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
1 3 0 3
Checking whitespace
True
Moving The Piece At: Column: 3 and Row: 1 
			 To: Column: 3 and Row: 0
Moving The Piece At: Column: 1 and Row: 0 
			 To: Column: 3 and Row: 1
Row 1 Column 4
Pawn Type: p
Player pawn got to the last rank, checking how many knights they have
Allowing them to redeploy pawn, disabling saving
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'p', 'W']
['P', 'W', 'P', 'K', 'P']
['W', 'W', 'k', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'W', 'K', 'k']
The user wants to redeploy the pawn, making the move
[<turtle.Turtle object at 0x10a861208>, 4, 1, True, <turtle.Turtle object at 0x10a8612e8>]
Moving The Piece At: Column: 3 and Row: 0 
			 To: Column: 1 and Row: 4
Force deleting the piece
GENERATING MINIMAX AI MOVE
[[[4, 3, 2, 2]], inf]
AI MOVES: [[4, 3, 2, 2]]
==============

AI Results:
Move: [4, 3, 2, 2]
[[[4, 3, 2, 2]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 4 and Row: 1
Moving The Piece At: Column: 3 and Row: 4 
			 To: Column: 2 and Row: 2
Row 2 Column 5
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['P', 'W', 'P', 'K', 'k']
['W', 'W', 'K', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'W', 'k']
deselected same box
GENERATING MINIMAX AI MOVE
[[[2, 2, 4, 1]], inf]
AI MOVES: [[2, 2, 4, 1]]
==============

AI Results:
Move: [2, 2, 4, 1]
[[[2, 2, 4, 1]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
4 1 3 1
Checking whitespace
True
Moving The Piece At: Column: 1 and Row: 4 
			 To: Column: 1 and Row: 3
Moving The Piece At: Column: 2 and Row: 2 
			 To: Column: 1 and Row: 4
Row 4 Column 2
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['P', 'W', 'P', 'K', 'k']
['W', 'W', 'W', 'W', 'W']
['W', 'p', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[1, 0, 2, 0]], inf]
AI MOVES: [[1, 0, 2, 0]]
==============

AI Results:
Move: [1, 0, 2, 0]
[[[1, 0, 2, 0]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
3 1 2 1
Checking whitespace
True
Moving The Piece At: Column: 1 and Row: 3 
			 To: Column: 1 and Row: 2
Moving The Piece At: Column: 0 and Row: 1 
			 To: Column: 0 and Row: 2
Row 3 Column 2
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'P', 'K', 'k']
['P', 'p', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[1, 3, 2, 1]], inf]
AI MOVES: [[1, 3, 2, 1]]
==============

AI Results:
Move: [1, 3, 2, 1]
[[[1, 3, 2, 1]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
2 1 1 2
Checking diagonal
New Piece is P
Board State: [['W', 'W', 'W', 'W', 'W'], ['W', 'W', 'P', 'K', 'k'], ['P', 'p', 'W', 'W', 'W'], ['W', 'W', 'W', 'W', 'W'], ['W', 'K', 'W', 'W', 'k']]
True
Moving The Piece At: Column: 1 and Row: 2 
			 To: Column: 2 and Row: 1
Moving The Piece At: Column: 3 and Row: 1 
			 To: Column: 1 and Row: 2
Row 2 Column 3
Pawn Type: p
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'p', 'W', 'k']
['P', 'K', 'W', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['W', 'K', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[2, 0, 3, 0]], -1]
AI MOVES: [[2, 0, 3, 0]]
==============

AI Results:
Move: [2, 0, 3, 0]
[[[2, 0, 3, 0]], -1]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 4 and Row: 1 
			 To: Column: 3 and Row: 3
Moving The Piece At: Column: 0 and Row: 2 
			 To: Column: 0 and Row: 3
Row 4 Column 4
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'p', 'W', 'W']
['W', 'K', 'W', 'W', 'W']
['P', 'W', 'W', 'k', 'W']
['W', 'K', 'W', 'W', 'k']
deselected same box
GENERATING MINIMAX AI MOVE
[[[2, 1, 3, 3]], inf]
AI MOVES: [[2, 1, 3, 3]]
==============

AI Results:
Move: [2, 1, 3, 3]
[[[2, 1, 3, 3]], inf]
DONE GENERATING MINIMAX AI MOVE
True
Moving The Piece At: Column: 3 and Row: 3 
			 To: Column: 1 and Row: 4
Moving The Piece At: Column: 1 and Row: 2 
			 To: Column: 3 and Row: 3
Row 5 Column 2
Pawn Type: k
Checking whether it is game over or not
Board:
['W', 'W', 'W', 'W', 'W']
['W', 'W', 'p', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['P', 'W', 'W', 'K', 'W']
['W', 'k', 'W', 'W', 'k']
GENERATING MINIMAX AI MOVE
[[[3, 3, 1, 2]], inf]
AI MOVES: [[3, 3, 1, 2]]
==============

AI Results:
Move: [3, 3, 1, 2]
[[[3, 3, 1, 2]], inf]
DONE GENERATING MINIMAX AI MOVE
Owns piece
1 2 0 2
Checking whitespace
True
Moving The Piece At: Column: 2 and Row: 1 
			 To: Column: 2 and Row: 0
Moving The Piece At: Column: 3 and Row: 3 
			 To: Column: 2 and Row: 1
Row 1 Column 3
Pawn Type: p
Player pawn got to the last rank, checking how many knights they have
Allowing them to redeploy pawn, disabling saving
Checking whether it is game over or not
Board:
['W', 'W', 'p', 'W', 'W']
['W', 'W', 'K', 'W', 'W']
['W', 'W', 'W', 'W', 'W']
['P', 'W', 'W', 'W', 'W']
['W', 'k', 'W', 'W', 'k']
The user wants to redeploy the pawn, making the move
[<turtle.Turtle object at 0x10a8671d0>, 3, 1, True, <turtle.Turtle object at 0x10a867390>]
Moving The Piece At: Column: 2 and Row: 0 
			 To: Column: 0 and Row: 4
Force deleting the piece
GENERATING MINIMAX AI MOVE
[[[]], -inf]
Doing random move to the board
AI MOVES: [[1, 2, 2, 4], 0]
==============

AI Results:
Move: [[1, 2, 2, 4], 0]
[[[1, 2, 2, 4], 0], -inf]
Exception in Tkinter callback
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/tkinter/__init__.py", line 1549, in __call__
    return self.func(*args)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/turtle.py", line 675, in eventfun
    fun(x, y)
  File "task9.py", line 1012, in onclick_board_handler
    ai_type_val = get_piece(ai_val[0], ai_val[1])
  File "task9.py", line 682, in get_piece
    return string_array[row][column]
TypeError: list indices must be integers or slices, not list

